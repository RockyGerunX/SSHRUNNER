name: SSH Tunnel Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  ssh-tunnel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Data
        id: cache-data
        uses: actions/cache@v4
        with:
          path: |
            ~/data
            ~/logs
          key: ${{ runner.os }}-data-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-data-

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autossh openssh-server
          wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /tmp/cloudflared
          sudo chmod +x /tmp/cloudflared
          sudo mv /tmp/cloudflared /usr/local/bin/cloudflared

      - name: Setup Directories
        run: |
          mkdir -p ~/data ~/logs
          echo "Data directory: ~/data" | tee -a ~/logs/setup.log
          echo "Logs directory: ~/logs" | tee -a ~/logs/setup.log

      - name: Setup SSH Server
        run: |
          sudo apt-get install -y openssh-server
          echo "Port 2222" | sudo tee -a /etc/ssh/sshd_config
          sudo systemctl restart sshd
          sleep 2
          sudo ss -tlnp | grep 2222 || { echo "SSH server gagal di port 2222"; sudo cat /var/log/syslog; exit 1; }
          if [ ! -f ~/.ssh/id_rsa ]; then
            ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/id_rsa
          fi
          cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          echo "Host tunnel
                HostName localhost
                User runner
                Port 2222
                IdentityFile ~/.ssh/id_rsa
                ServerAliveInterval 30
                ServerAliveCountMax 3
                ExitOnForwardFailure yes" > ~/.ssh/config
          echo "SSH setup completed at $(date)" | tee -a ~/logs/setup.log

      - name: Start Cloudflare Tunnel
        run: |
          nohup cloudflared tunnel --url ssh://localhost:2222 > ~/logs/cloudflared.log 2>&1 &
          sleep 5
          TUNNEL_URL=$(grep -oP 'https://[a-zA-Z0-9-]+\.trycloudflare\.com' ~/logs/cloudflared.log | head -n 1)
          if [ -z "$TUNNEL_URL" ]; then
            echo "Error: Tidak bisa mendapatkan URL tunnel"
            cat ~/logs/cloudflared.log
            exit 1
          fi
          echo "Tunnel URL: $TUNNEL_URL" | tee -a ~/logs/tunnel.log
          echo "TUNNEL_URL=$TUNNEL_URL" >> $GITHUB_ENV

      - name: Start Autossh
        run: |
          nohup autossh -M 0 -N -o "ServerAliveInterval=30" -o "ServerAliveCountMax=3" tunnel > ~/logs/autossh.log 2>&1 &
          sleep 2
          if pgrep autossh > /dev/null; then
            echo "Autossh berjalan" | tee -a ~/logs/tunnel.log
          else
            echo "Autossh gagal" | tee -a ~/logs/tunnel.log
            cat ~/logs/autossh.log
            exit 1
          fi

      - name: Display Tunnel Info
        run: |
          echo "Tunnel aktif di: ${{ env.TUNNEL_URL }}:2222"
          echo "Untuk koneksi SSH, gunakan:"
          echo "ssh -o ProxyCommand='cloudflared access tcp --hostname ${{ env.TUNNEL_URL }}' runner@localhost -p 2222"
          echo "Log Cloudflare Tunnel:" | tee -a ~/logs/tunnel.log
          cat ~/logs/cloudflared.log | tee -a ~/logs/tunnel.log
          echo "Log Autossh:" | tee -a ~/logs/tunnel.log
          cat ~/logs/autossh.log | tee -a ~/logs/tunnel.log

      - name: Keep Alive for 6 Hours
        run: |
          END_TIME=$(( $(date +%s) + 6*60*60 ))
          while [ $(date +%s) -lt $END_TIME ]; do
            echo "Keep alive: $(date)" | tee -a ~/logs/keep-alive.log
            echo "Tunnel: ${{ env.TUNNEL_URL }}:2222" | tee -a ~/logs/keep-alive.log
            if pgrep autossh > /dev/null; then
              echo "Autossh aktif" | tee -a ~/logs/keep-alive.log
            else
              echo "Autossh mati, restart..." | tee -a ~/logs/keep-alive.log
              nohup autossh -M 0 -N -o "ServerAliveInterval=30" -o "ServerAliveCountMax=3" tunnel > ~/logs/autossh.log 2>&1 &
            fi
            sleep 300
          done
          echo "Keep alive selesai" | tee -a ~/logs/keep-alive.log

      - name: Save Final Logs
        if: always()
        run: |
          echo "Final Logs at $(date)" | tee -a ~/logs/final.log
          echo "Setup Log:" | tee -a ~/logs/final.log
          cat ~/logs/setup.log | tee -a ~/logs/final.log
          echo "Tunnel Log:" | tee -a ~/logs/final.log
          [ -f ~/logs/tunnel.log ] && cat ~/logs/tunnel.log | tee -a ~/logs/final.log || echo "No tunnel log"
          echo "Keep Alive Log:" | tee -a ~/logs/final.log
          [ -f ~/logs/keep-alive.log ] && cat ~/logs/keep-alive.log | tee -a ~/logs/final.log || echo "No keep-alive log"
